/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_sim_diskservice_Utils_SM2Util */

#ifndef _Included_com_sim_diskservice_Utils_SM2Util
#define _Included_com_sim_diskservice_Utils_SM2Util
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    generateKeyPair
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_generateKeyPair
  (JNIEnv *, jobject);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    generateKeyPairPem
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_generateKeyPairPem
  (JNIEnv *, jobject);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    encryptByte
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_encryptByte
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    decryptByte
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_decryptByte
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    encryptBytePem
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_encryptBytePem
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    decryptBytePem
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_decryptBytePem
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    sm2DecodeprivateKeyPem
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_sm2DecodeprivateKeyPem
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    sm2DecodepublicKeyPem
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_sm2DecodepublicKeyPem
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    getSm2ErrStr
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_sim_diskservice_Utils_SM2Util_getSm2ErrStr
  (JNIEnv *, jobject);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    sm3hash
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_sm3hash
  (JNIEnv *, jobject, jbyteArray);


JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_sm3Filehash
(JNIEnv *, jobject, jbyteArray);

JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_sm3Hmac
(JNIEnv *, jobject, jbyteArray, jbyteArray);
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_sm3FileHmac
(JNIEnv *, jobject, jbyteArray, jbyteArray);

JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_sign
(JNIEnv *, jobject, jbyteArray, jbyteArray,jbyteArray);
JNIEXPORT jint JNICALL Java_com_sim_diskservice_Utils_SM2Util_verify
(JNIEnv *, jobject, jbyteArray, jbyteArray,jbyteArray,jbyteArray);

JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_signPem
(JNIEnv *, jobject, jbyteArray, jbyteArray,jbyteArray);
JNIEXPORT jint JNICALL Java_com_sim_diskservice_Utils_SM2Util_verifyPem
(JNIEnv *, jobject, jbyteArray, jbyteArray,jbyteArray,jbyteArray);
/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    sm4getKey
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_sim_diskservice_Utils_SM2Util_sm4getKey
  (JNIEnv *, jobject);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    sm4encryptByte
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_sm4encryptByte
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     com_sim_diskservice_Utils_SM2Util
 * Method:    sm4decryptByte
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sim_diskservice_Utils_SM2Util_sm4decryptByte
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
